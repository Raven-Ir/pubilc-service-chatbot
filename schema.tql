define

    public-service sub entity,
    plays hasInput:service,
    plays hasRule:service,
    plays hasCost: service,
    plays hasOutput: service,
    plays hasChannel:service,
    plays visitation:service,
    owns identifier @key,
    owns name,
    owns description;

    evidence sub entity,
    plays hasInput:in,
    plays input-citizen:in,
    owns identifier,
    owns name @key,
    owns description;

    output sub entity,
    plays hasOutput:out,
    plays output-citizen:out;
    owns identifier,
    owns name @key,
    owns description;

    cost sub entity,
    plays hasCost:cost,
    plays input-citizen:in,
    plays finacial-help:in,
    owns @identifier,
    owns amount,
    owns currency;

    channel sub entity,
    plays hasChannel:ch,
    owns identifier,
    owns name,
    owns description;
    
    rul sub entity,
    plays hasRule:rul,
    owns @identifier,
    owns description;

    citizen sub entity,
    plays visitation:citizen,
    plays input-citizen:citizen,
    plays cost-citizen:citizen, 
    owns both-partner-aggreement,
    owns children-custody-aggreement,
    owns both-partners-present,
    owns abuse,
    owns marriage-duration,
    owns income,
    owns kids,
    owns citizenship;

    identifier sub attribute,
    value string;

    name sub attribute,
    value string;

    description sub attribute,
    value string;

    amount sub attribute,
    value double;

    currency sub attribute,
    value string;

    kids sub attribute,
    value boolean;
    
    marriage-duration sub attribute,
    value double;

    both-partner-aggreement sub attribute,
    value boolean;

    children-custody-aggreement sub attribute,
    value boolean;

    income sub attribute,
    value double;

    hasCost sub relation,
    relates cost,
    relates output;

    hasOutput sub relation,
    relates output,
    relates public-service;

    hasChannel sub relation,
    relates channel,
    relates public-service;

    hasInput sub relation,
    relates public-service,
    relates evidence;

    hasRule sub relation,
    relates public-service,
    relates rul;

    visitation sub relation,
    relates public-service,
    relates citizen;

    input-citizen sub relation,
    relates citizen,
    relates in;

    cost-citizen sub relation,
    relates citizen,
    relates cost;


    rule uncontested-divorce-cost:
    when {
        $serv isa public-service;
        $c isa citizen, has both-partner-aggreement=true;
        $cost isa cost, has identifier "uncontested";
        (service:$serv, citizen:$c) isa visitation;
        (service:$serv, cost:$cost) isa hasCost;
    } then {
        (citizen:$c, cost:$cost) isa cost-citizen;
    };

    rule uncontested-divorce-information:
    when {
        $serv isa public-service;
        $in isa evidence, has identifier "uncontested";
        (service:$serv,citizen:$c) isa visitation;
        (service:$serv, in:$in) isa hasInput;
    } then {
        (citizen:$c, in:$in) isa input-citizen;
    };

   rule contested-divorce-cost:
    when {
        $serv isa public-service;
        $c isa citizen, has both-partner-aggreement=false;
        $cost isa cost, has identifier "contested";
        (service:$serv, citizen:$c) isa visitation;
        (service:$serv, cost:$cost) isa hasCost;
    } then {
        (citizen:$c, cost:$cost) isa cost-citizen;
    };

    rule contested-divorce-information:
     when {
         $serv isa public-service;
         $in isa evidence, has identifier "contested";
         (service:$serv,citizen:$c) isa visitation;
         (service:$serv, in:$in) isa hasInput;
     } then {
         (citizen:$c, in:$in) isa input-citizen;
     };

    rule children-custody:
     when {
         $serv isa public-service;
         $c isa citizen, has kids= true;
         $in isa evidence, has identifier "children";
         (service:$serv,citizen:$c) isa visitation;
         (service:$serv, in:$in) isa hasInput;
     } then {
         (citizen:$c, in:$in) isa input-citizen;
     };

     rule children-custody-aggreement:
      when {
         $serv isa public-service;
         $c isa citizen, has children-custody-aggreement= true;
         $in isa evidence, has identifier "custody-aggrement";
         (service:$serv,citizen:$c) isa visitation;
         (service:$serv, in:$in) isa hasInput;
      } then {
          (citizen: $c, in = $in) isa input-citizen;
      }

      rule abuse:
        when {
            $serv isa public-service;
            $c isa citizen, has abuse = true;
            $in isa evidence, has identifier "uncontested";
            (service:$serv,citizen:$c) isa visitation;
            (service:$serv, in:$in) isa hasInput;
        } then {
            (citizen:$c, in:$in) isa input-citizen;
        }

    //change some input to outputs. 